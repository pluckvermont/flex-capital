function carousel_items() {
    jQuery(".clients_carousel").each(function() {
        var timeout = jQuery(this).attr("data-timeout");
        var clientsNo = jQuery(this).attr("data-visible-items");
        var clientsAutoPlay = jQuery(this).attr("data-autoplay");
        var dotsNavigation = jQuery(this).attr("data-navigation");
        var display_0 = jQuery(this).attr("data-0");
        var display_480 = jQuery(this).attr("data-480");
        var display_768 = jQuery(this).attr("data-768");
        var display_992 = jQuery(this).attr("data-992");
        var carouselSpeed = jQuery(this).attr("data-speed");
        carouselSpeed || (carouselSpeed = 400), clientsAutoPlay === "true" ? clientsAutoPlay = !0 : clientsAutoPlay = !1, dotsNavigation === "yes" ? dotsNavigation = !0 : dotsNavigation = !1, jQuery(this).owlCarousel({
            items: parseInt(clientsNo),
            margin: 30,
            loop: !0,
            nav: !1,
            lazyLoad: !0,
            autoplay: clientsAutoPlay,
            autoplayTimeout: timeout,
            autoplayHoverPause: !0,
            autoplaySpeed: 1E3,
            dragEndSpeed: carouselSpeed,
            dotsSpeed: carouselSpeed,
            dots: dotsNavigation,
            navRewind: !0,
            responsive: {
                0: {
                    items: Number(display_0)
                },
                480: {
                    items: parseInt(display_480)
                },
                768: {
                    items: parseInt(display_768)
                },
                992: {
                    items: parseInt(display_992)
                },
                1200: {
                    items: parseInt(clientsNo)
                }
            }
        })
    })
}

function cr_flexslider_masonry() {
    jQuery(".flexslider").each(function() {
        var e = jQuery(this),
            t = 800,
            a = 1E3 * parseInt(e.attr("data-interval")),
            i = e.attr("data-flex_fx"),
            r = !0;
        0 != a && a || (r = !1), e.flexslider({
            animation: i,
            slideshow: r,
            slideshowSpeed: a,
            sliderSpeed: t,
            smoothHeight: !1,
            directionNav: !0,
            controlNav: !1
        })
    }), jQuery(".recent_posts_container").each(function() {
        jQuery(".grid-masonry").masonry({
            itemSelector: ".blogpost",
            columnWidth: ".blogpost",
            isInitLayout: !0,
            isResizeBound: !0,
            gutter: ".gutter-sizer",
            percentPosition: !0
        })
    })
}

function cr_countdown() {
    jQuery(".cr-countdown").length > 0 && jQuery(".cr-countdown").each(function() {
        var e = jQuery(this),
            t = e.attr("data-date"),
            a = e.attr("data-offset");
        e.downCount({
            date: t,
            offset: a
        })
    })
}

function flip_box() {
    jQuery(".flip-container").each(function() {
        var e, t, a = jQuery(this),
            i = 0;
        console.log("start flip"), a.find(".front").css("min-height", ""), a.find(".back").css("min-height", ""), a.find(".front_inner").css("margin-top", ""), a.find(".back_inner").css("margin-top", ""), a.css("min-height", ""), setTimeout(function() {
            a.find(".front").outerHeight() > a.find(".back").outerHeight() ? (t = a.find(".front").height(), e = a.find(".front").outerHeight(), i = (t - a.find(".back_inner").outerHeight()) / 2, a.find(".back").css("min-height",
                e), a.css("min-height", e), a.find(".back_inner").css("margin-top", i)) : (t = a.find(".back").height(), e = a.find(".back").outerHeight(), i = (t - a.find(".front_inner").outerHeight()) / 2, a.find(".front").css("min-height", e), a.css("min-height", e), a.find(".front_inner").css("margin-top", i))
        }, 100)
    })
}
var vc_iframe = {
    scripts_to_wait: 0,
    time_to_call: !1,
    ajax: !1,
    activities_list: [],
    scripts_to_load: !1,
    loaded_script: {},
    loaded_styles: {},
    inline_scripts: [],
    inline_scripts_body: []
};
! function($) {
    vc_iframe.showNoContent = function(show) {
            var $vc_no_content_helper_el = $("#vc_no-content-helper");
            !1 === show && $vc_no_content_helper_el.addClass("vc_not-empty") || $vc_no_content_helper_el.removeClass("vc_not-empty")
        }, vc_iframe.scrollTo = function(id) {
            var $el, el_height, position_y, position, window_height = $(window).height(),
                window_scroll_top = $(window).scrollTop();
            if (id && ($el = $("[data-model-id=" + id + "]"))) {
                if (position = $el.offset(), !1 === (position_y = position ? position.top : !1)) return !1;
                el_height = $el.height(), (position_y > window_scroll_top + window_height || window_scroll_top > position_y + el_height) && $.scrollTo($el, 500, {
                    offset: -50
                })
            }
        }, vc_iframe.startSorting = function() {
            $("body").addClass("vc_sorting")
        }, vc_iframe.stopSorting = function() {
            $("body").removeClass("vc_sorting")
        }, vc_iframe.initDroppable = function() {
            $("body").addClass("vc_dragging"), $(".vc_container-block").bind("mouseenter.vcDraggable", function() {
                $(this).addClass("vc_catcher")
            }).bind("mouseout.vcDraggable", function() {
                $(this).removeClass("vc_catcher")
            })
        },
        vc_iframe.killDroppable = function() {
            $("body").removeClass("vc_dragging"), $(".vc_container-block").unbind("mouseover.vcDraggable mouseleave.vcDraggable")
        }, vc_iframe.addActivity = function(callback) {
            this.activities_list.push(callback)
        }, vc_iframe.renderPlaceholder = function(event, element) {
            var tag = $(element).data("tag"),
                is_container = parent.vc.map[tag] === Object(parent.vc.map[tag]) && ((!0 === parent.vc.map[tag].is_container || !1 === parent.vc.map[tag].is_container || "[object Boolean]" === toString.call(parent.vc.map[tag].is_container)) &&
                    !0 === parent.vc.map[tag].is_container || null != parent.vc.map[tag].as_parent && "[object Array]" === Object.prototype.toString.call(parent.vc.map[tag].as_parent) && 0 != parent.vc.map[tag].as_parent),
                $helper = $('<div class="vc_helper vc_helper-' + tag + '"><i class="vc_general vc_element-icon' + (parent.vc.map[tag].icon ? " " + parent.vc.map[tag].icon : "") + '"' + (is_container ? ' data-is-container="true"' : "") + "></i> " + parent.vc.map[tag].name + "</div>").prependTo("body");
            return $helper
        }, vc_iframe.setSortable = function(app) {
            var $vc_row_el =
                $("[data-tag=vc_row]");
            $vc_row_el.parent().sortable({
                    forcePlaceholderSize: !1,
                    items: "[data-tag=vc_row]",
                    handle: ".vc_move-vc_row",
                    cursor: "move",
                    cursorAt: {
                        top: 20,
                        left: 16
                    },
                    placeholder: "vc_placeholder-row",
                    cancel: ".vc-non-draggable-row",
                    helper: this.renderPlaceholder,
                    start: function(event, ui) {
                        vc_iframe.startSorting(), ui.placeholder.height(30)
                    },
                    stop: this.stopSorting,
                    tolerance: "pointer",
                    update: function(event, ui) {
                        parent.vc.app.saveRowOrder()
                    }
                }), $(".vc_element-container").sortable({
                    forcePlaceholderSize: !0,
                    helper: this.renderPlaceholder,
                    distance: 3,
                    scroll: !0,
                    scrollSensitivity: 70,
                    cursor: "move",
                    cursorAt: {
                        top: 20,
                        left: 16
                    },
                    connectWith: ".vc_element-container",
                    items: "> [data-model-id]",
                    cancel: ".vc-non-draggable",
                    handle: ".vc_element-move",
                    start: this.startSorting,
                    update: app.saveElementOrder,
                    change: function(event, ui) {
                        ui.placeholder.height(30), ui.placeholder.width(ui.placeholder.parent().width())
                    },
                    placeholder: "vc_placeholder",
                    tolerance: "pointer",
                    over: function(event, ui) {
                        var tag = ui.item.data("tag"),
                            vc_map = window.parent.vc.map || !1,
                            parent_tag = ui.placeholder.closest("[data-tag]").data("tag"),
                            allowed_container_element = "undefined" == typeof vc_map[parent_tag].allowed_container_element ? !0 : vc_map[parent_tag].allowed_container_element;
                        if (ui.placeholder.removeClass("vc_hidden-placeholder"), ui.placeholder.css({
                                maxWidth: ui.placeholder.parent().width()
                            }), tag && vc_map) {
                            if (window.parent.vc.checkRelevance(parent_tag, tag) || ui.placeholder.addClass("vc_hidden-placeholder"), ui.sender) {
                                var $sender_column = ui.sender.closest(".vc_element").removeClass("vc_sorting-over");
                                1 > $sender_column.find(".vc_element").length &&
                                    $sender_column.addClass("vc_empty")
                            }
                            ui.placeholder.closest(".vc_element").addClass("vc_sorting-over");
                            var is_container = vc_map[tag] === Object(vc_map[tag]) && ((!0 === vc_map[tag].is_container || !1 === vc_map[tag].is_container || "[object Boolean]" === toString.call(vc_map[tag].is_container)) && !0 === vc_map[tag].is_container || null != vc_map[tag].as_parent && "[object Array]" === Object.prototype.toString.call(vc_map[tag].as_parent) && 0 != vc_map[tag].as_parent);
                            is_container && !0 !== allowed_container_element && allowed_container_element !==
                                tag.replace(/_inner$/, "") && ui.placeholder.addClass("vc_hidden-placeholder")
                        }
                    },
                    out: function(event, ui) {
                        ui.placeholder.removeClass("vc_hidden-placeholder")
                    },
                    stop: function(event, ui) {
                        var item_model, tag = ui.item.data("tag"),
                            vc_map = window.parent.vc.map || !1,
                            parent_tag = ui.item.parents("[data-tag]:first").data("tag"),
                            allowed_container_element = vc_map[parent_tag].allowed_container_element ? vc_map[parent_tag].allowed_container_element : !0,
                            trig_changed = !0;
                        window.parent.vc.checkRelevance(parent_tag, tag) || (ui.placeholder.removeClass("vc_hidden-placeholder"),
                            $(this).sortable("cancel"), trig_changed = !1);
                        var is_container = vc_map[tag] === Object(vc_map[tag]) && ((!0 === vc_map[tag].is_container || !1 === vc_map[tag].is_container || "[object Boolean]" === toString.call(vc_map[tag].is_container)) && !0 === vc_map[tag].is_container || null != vc_map[tag].as_parent && "[object Array]" === Object.prototype.toString.call(vc_map[tag].as_parent) && 0 != vc_map[tag].as_parent);
                        is_container && !0 !== allowed_container_element && allowed_container_element !== tag.replace(/_inner$/, "") && (ui.placeholder.removeClass("vc_hidden-placeholder"),
                            $(this).sortable("cancel"), trig_changed = !1), trig_changed && (item_model = parent.vc.shortcodes.get(ui.item.data("modelId")), item_model.view.parentChanged()), vc_iframe.stopSorting()
                    }
                }), $(".wpb_row").sortable({
                    forcePlaceholderSize: !0,
                    tolerance: "pointer",
                    items: "> [data-tag=vc_column], > [data-tag=vc_column_inner]",
                    handle: "> .vc_controls .vc_move-vc_column",
                    start: function(event, ui) {
                        vc_iframe.startSorting();
                        var id = ui.item.data("modelId"),
                            model = parent.vc.shortcodes.get(id),
                            css_class = model.view.convertSize(model.getParam("width"));
                        ui.item.appendTo(ui.item.parent().parent()), ui.placeholder.addClass(css_class), ui.placeholder.width(ui.placeholder.width() - 4)
                    },
                    cursor: "move",
                    cursorAt: {
                        top: 20,
                        left: 16
                    },
                    stop: function(event, ui) {
                        vc_iframe.stopSorting(event, ui)
                    },
                    update: app.saveColumnOrder,
                    placeholder: "vc_placeholder-column",
                    helper: this.renderPlaceholder
                }), $vc_row_el.disableSelection(), $vc_row_el.delegate("select", "mouseenter", function() {
                    $vc_row_el.enableSelection()
                }), $vc_row_el.delegate("select", "mouseleave", function() {
                    $vc_row_el.disableSelection()
                }),
                $vc_row_el.delegate('input[type="text"],textarea', "focus", function() {
                    $vc_row_el.enableSelection()
                }), $vc_row_el.delegate('input[type="text"],textarea', "blur", function() {
                    $vc_row_el.disableSelection()
                }), app.setFrameSize(), $("#vc_load-new-js-block").appendTo("body")
        }, vc_iframe.loadCustomCss = function(css) {
            vc_iframe.$custom_style || ($("[data-type=vc_custom-css]").remove(), vc_iframe.$custom_style = $('<style class="vc_post_custom_css_style"></style>').appendTo("body")), vc_iframe.$custom_style.html(css.replace(/(<([^>]+)>)/gi,
                ""))
        }, vc_iframe.setCustomShortcodeCss = function(css) {
            this.$shortcodes_custom_css = $("body > [data-type=vc_shortcodes-custom-css]"), this.$shortcodes_custom_css.length || (this.$shortcodes_custom_css = $('<style data-type="vc_shortcodes-custom-css"></style>').prependTo("body")), this.$shortcodes_custom_css.append(css)
        }, vc_iframe.addInlineScript = function(script) {
            return this.inline_scripts.push(script) - 1
        }, vc_iframe.addInlineScriptBody = function(script) {
            return this.inline_scripts_body.push(script) - 1
        }, vc_iframe.loadInlineScripts =
        function() {
            for (var i = 0; this.inline_scripts[i];) $(this.inline_scripts[i]).insertAfter(".js_placeholder_" + i), $(".js_placeholder_" + i).remove(), i++;
            this.inline_scripts = []
        }, vc_iframe.loadInlineScriptsBody = function() {
            for (var i = 0; this.inline_scripts_body[i];) $(this.inline_scripts_body[i]).insertAfter(".js_placeholder_inline_" + i), $(".js_placeholder_inline_" + i).remove(), i++;
            this.inline_scripts_body = []
        }, vc_iframe.allowedLoadScript = function(src) {
            var i, scripts_string, ls_rc, scripts = [],
                scripts_to_add = [];
            if (src.match(/load\-scripts\.php/)) {
                scripts_string =
                    src.match(/load%5B%5D=([^&]+)/)[1], scripts_string && (scripts = scripts_string.split(","));
                for (i in scripts) ls_rc = "load-script:" + scripts[i], vc_iframe.loaded_script[window.parent.vc_globalHashCode(ls_rc)] || (vc_iframe.loaded_script[window.parent.vc_globalHashCode(ls_rc)] = ls_rc, scripts_to_add.push(scripts[i]));
                return scripts_to_add.length ? src.replace(/load%5B%5D=[^&]+/, "load%5B%5D=" + scripts_to_add.join(",")) : !1
            }
            return vc_iframe.loaded_script[window.parent.vc_globalHashCode(src)] ? !1 : (vc_iframe.loaded_script[window.parent.vc_globalHashCode(src)] =
                src, src)
        }, vc_iframe.collectScriptsData = function() {
            $("script[src]").each(function() {
                vc_iframe.allowedLoadScript($(this).attr("src"))
            }), $("link[href]").each(function() {
                var href = $(this).attr("href");
                vc_iframe.loaded_styles[window.parent.vc_globalHashCode(href)] = href
            })
        }, $("body").removeClass("admin-bar"), $(document).ready(function() {
            $("#wpadminbar").hide(), $(".edit-link").hide(), window.parent.vc && !window.parent.vc.loaded && window.parent.vc.build && window.parent.vc.build()
        }), vc_iframe.reload = function() {
            vc_iframe.reload_safety_call = !1, $("a:not(.control-btn),form").each(function() {
                $(this).attr("target", "_blank")
            }), this.collectScriptsData(), this.loadInlineScripts(), this.loadInlineScriptsBody();
            for (var i in this.activities_list) this.activities_list[i].call(window);
            return this.activities_list = [], window.setTimeout(function() {
                window.vc_teaserGrid(), window.vc_carouselBehaviour(), window.vc_prettyPhoto(), window.vc_googleplus(), window.vc_pinterest(), window.vc_progress_bar(), window.vc_rowBehaviour(), window.vc_waypoints(), window.vc_google_fonts(),
                    window.vc_gridBehaviour(), window.vc_googleMapsPointer(), $(window).trigger("vc_reload"), $(window).trigger("resize")
            }, 10), !0
        }, vc_iframe.addScripts = function($elements) {
            vc_iframe.scripts_to_wait = $elements.length, vc_iframe.scripts_to_load = $elements
        }, vc_iframe.addStyles = function($elements) {
            $elements.each(function() {
                $("<style/>", {
                    type: "text/css"
                }).html($(this).html()).appendTo("body")
            })
        }, vc_iframe.loadScripts = function() {
            return vc_iframe.scripts_to_wait && vc_iframe.scripts_to_load ? (vc_iframe.scripts_to_load.each(function() {
                var $element =
                    $(this);
                if (vc_iframe.reload_safety_call = !0, $element.is("script")) {
                    var src = $element.attr("src");
                    if (src) src = vc_iframe.allowedLoadScript(src), src ? $.getScript(src, function() {
                        vc_iframe.scripts_to_wait -= 1, 1 > vc_iframe.scripts_to_wait && vc_iframe.reload()
                    }) : (vc_iframe.scripts_to_wait -= 1, 1 > vc_iframe.scripts_to_wait && vc_iframe.reload());
                    else if ($element) {
                        try {
                            $("<script/>", {
                                type: "text/javascript"
                            }).html($element.html()).appendTo("body")
                        } catch (e) {
                            window.console && window.console.error && window.console.error(e)
                        }
                        vc_iframe.scripts_to_wait -=
                            1, 1 > vc_iframe.scripts_to_wait && vc_iframe.reload()
                    }
                } else {
                    var href = $element.attr("href");
                    href && !vc_iframe.loaded_styles[window.parent.vc_globalHashCode(href)] && $("<link/>", {
                        rel: "stylesheet",
                        type: "text/css",
                        href: href
                    }).appendTo("body"), vc_iframe.scripts_to_wait -= 1, 1 > vc_iframe.scripts_to_wait && vc_iframe.reload()
                }
            }), vc_iframe.scripts_to_load = !1, $(document).ajaxComplete(function(e) {
                $(e.currentTarget).unbind("ajaxComplete"), !vc_iframe.scripts_to_wait && vc_iframe.reload()
            }), void window.setTimeout(function() {
                !0 ===
                    vc_iframe.reload_safety_call && vc_iframe.reload()
            }, 14E3)) : void vc_iframe.reload()
        }, vc_iframe.destroyTabs = function($tabs) {
            $tabs.each(function() {
                var $t = $(this).find(".wpb_tour_tabs_wrapper");
                $t.tabs("destroy")
            })
        }, vc_iframe.buildTabs = function($tab, active) {
            var ver = $.ui.version.split("."),
                old_version = 1 === parseInt(ver[0]) && 9 > parseInt(ver[1]);
            return $tab.each(function(index) {
                var $tabs, tabs_array = ($(this).attr("data-interval"), []),
                    $wrapper = $(this).find(".wpb_tour_tabs_wrapper");
                $wrapper.hasClass("ui-widget") ?
                    (active = !1 !== active ? active : $wrapper.tabs("option", "active"), $tabs = $wrapper.tabs("refresh"), $wrapper.tabs("option", "active", active)) : $tabs = $(this).find(".wpb_tour_tabs_wrapper").tabs({
                        active: 0,
                        show: function(event, ui) {
                            wpb_prepare_tab_content(event, ui)
                        },
                        activate: function(event, ui) {
                            wpb_prepare_tab_content(event, ui)
                        }
                    }), $(this).find(".vc_element").each(function() {
                        tabs_array.push(this.id)
                    }), $(this).find(".wpb_prev_slide a, .wpb_next_slide a").unbind("click").click(function(e) {
                        if (e.preventDefault(), old_version) {
                            var index =
                                $tabs.tabs("option", "selected");
                            $(this).parent().hasClass("wpb_next_slide") ? index++ : index--, 0 > index ? index = $tabs.tabs("length") - 1 : index >= $tabs.tabs("length") && (index = 0), $tabs.tabs("select", index)
                        } else {
                            var index = $tabs.tabs("option", "active"),
                                length = $tabs.find(".wpb_tab").length;
                            index = $(this).parent().hasClass("wpb_next_slide") ? index + 1 >= length ? 0 : index + 1 : 0 > index - 1 ? length - 1 : index - 1, $tabs.tabs("option", "active", index)
                        }
                    })
            }), !0
        }, vc_iframe.setActiveTab = function($tabs, index) {
            $tabs.each(function() {
                $(this).find(".wpb_tour_tabs_wrapper").tabs("refresh"),
                    $(this).find(".wpb_tour_tabs_wrapper").tabs("option", "active", index)
            })
        }, vc_iframe.setTabsSorting = function(view) {
            var $controls = $(view.tabsControls().get(0));
            $controls.hasClass("ui-sortable") && $controls.sortable("destroy"), $controls.sortable({
                axis: "vc_tour" === view.model.get("shortcode") ? "y" : "x",
                update: view.stopSorting,
                items: "> li:not(.add_tab_block)"
            });
            var userAgent = navigator.userAgent.toLowerCase();
            userAgent.match(/firefox/) && ($controls.bind("sortstart", function(event, ui) {
                ui.helper.css("margin-top",
                    $(window).scrollTop())
            }), $controls.bind("sortbeforestop", function(event, ui) {
                ui.helper.css("margin-top", 0)
            }))
        }, vc_iframe.buildAccordion = function($el, active) {
            $el.each(function(index) {
                var $tabs, $this = $(this),
                    $wrapper = $this.find(".wpb_accordion_wrapper"),
                    active_tab = ($this.attr("data-interval"), !isNaN($this.data("active-tab")) && 0 < parseInt($this.data("active-tab")) ? parseInt($this.data("active-tab")) - 1 : !1),
                    collapsible = !1 === active_tab || "yes" === $this.data("collapsible");
                $wrapper.hasClass("ui-widget") ? (!1 ===
                    active && (active = $wrapper.accordion("option", "active")), $wrapper.accordion("refresh"), $wrapper.accordion("option", "active", active)) : $tabs = $this.find(".wpb_accordion_wrapper").accordion({
                    create: function(event, ui) {
                        ui.panel.parent().parent().addClass("vc_active-accordion-tab")
                    },
                    header: "> .vc_element > div > h3",
                    autoHeight: !1,
                    heightStyle: "content",
                    active: active_tab,
                    collapsible: collapsible,
                    navigation: !0,
                    activate: function(event, ui) {
                        vc_accordionActivate(event, ui), ui.oldPanel.parent().parent().removeClass("vc_active-accordion-tab"),
                            ui.newPanel.parent().parent().addClass("vc_active-accordion-tab")
                    },
                    change: function(event, ui) {
                        "undefined" != typeof $.fn.isotope && ui.newContent.find(".isotope").isotope("layout"), window.vc_carouselBehaviour()
                    }
                })
            })
        }, vc_iframe.setAccordionSorting = function(view) {
            $(view.$accordion.find("> .wpb_accordion_wrapper").get(0)).sortable({
                handle: ".vc_move-vc_accordion_tab",
                update: view.stopSorting
            })
        }, vc_iframe.vc_imageCarousel = function(model_id) {
            var $el = $("[data-model-id=" + model_id + "]"),
                $carousel = ($el.find("img").length,
                    $el.find('[data-ride="vc_carousel"]'));
            return $carousel.find("img:first").length ? $carousel.find("img:first").prop("complete") ? void $carousel.carousel($carousel.data()) : void window.setTimeout(function() {
                vc_iframe.vc_imageCarousel(model_id)
            }, 500) : void $carousel.carousel($carousel.data())
        }, vc_iframe.vc_gallery = function(model_id) {
            var $el = $("[data-model-id=" + model_id + "]"),
                $gallery = $el.find(".wpb_gallery_slides");
            return $gallery.find("img:first").prop("complete") ? void this.gallerySlider($gallery) : void window.setTimeout(function() {
                    vc_iframe.vc_gallery(model_id)
                },
                500)
        }, vc_iframe.vc_postsSlider = function(model_id) {
            var $el = $("[data-model-id=" + model_id + "]"),
                $gallery = $el.find(".wpb_gallery_slides");
            this.gallerySlider($gallery)
        }, vc_iframe.gallerySlider = function($gallery) {
            var $imagesGrid;
            if ($gallery.hasClass("wpb_flexslider")) {
                var sliderSpeed = 800,
                    sliderTimeout = 1E3 * parseInt($gallery.attr("data-interval")),
                    sliderFx = $gallery.attr("data-flex_fx"),
                    slideshow = !0;
                0 === sliderTimeout && (slideshow = !1), $gallery.flexslider({
                    animation: sliderFx,
                    slideshow: slideshow,
                    slideshowSpeed: sliderTimeout,
                    sliderSpeed: sliderSpeed,
                    smoothHeight: !0
                }), $gallery.addClass("loaded")
            } else if ($gallery.hasClass("wpb_slider_nivo")) {
                var sliderSpeed = 800,
                    sliderTimeout = 1E3 * $gallery.attr("data-interval");
                0 === sliderTimeout && (sliderTimeout = 9999999999), $gallery.find(".nivoSlider").nivoSlider({
                    effect: "boxRainGrow,boxRain,boxRainReverse,boxRainGrowReverse",
                    slices: 15,
                    boxCols: 8,
                    boxRows: 4,
                    animSpeed: sliderSpeed,
                    pauseTime: sliderTimeout,
                    startSlide: 0,
                    directionNav: !0,
                    directionNavHide: !0,
                    controlNav: !0,
                    keyboardNav: !1,
                    pauseOnHover: !0,
                    manualAdvance: !1,
                    prevText: "Prev",
                    nextText: "Next"
                })
            } else $gallery.hasClass("wpb_image_grid") && ($.fn.imagesLoaded ? $imagesGrid = $gallery.find(".wpb_image_grid_ul").imagesLoaded(function() {
                $imagesGrid.isotope({
                    itemSelector: ".isotope-item",
                    layoutMode: "fitRows"
                })
            }) : $gallery.find(".wpb_image_grid_ul").isotope({
                itemSelector: ".isotope-item",
                layoutMode: "fitRows"
            }))
        }, vc_iframe.vc_Flickr = function($placeholder) {
            var link = $placeholder.data("link");
            $.getScript(link, function() {
                $(window.b_txt).insertAfter($placeholder)
            })
        },
        vc_iframe.vc_toggle = function(model_id) {
            var $el = $("[data-model-id=" + model_id + "]");
            window.vc_toggleBehaviour($el)
        }, vc_iframe.gridInit = function(model_id) {
            var vcGrid, $grid = $("[data-model-id=" + model_id + "] [data-vc-grid-settings]");
            $grid.find(".vc_grid-loading:visible").length || (vcGrid = $grid.data("vcGrid"), vcGrid ? ($grid.empty(), vcGrid.init()) : $grid.vcGrid())
        }, vc_iframe.updateChildGrids = function(model_id) {
            var $grid = $("[data-model-id=" + model_id + "] [data-vc-grid-settings]");
            $grid.each(function() {
                var $grid =
                    $(this),
                    vcGrid = $(this).data("vcGrid");
                !$grid.find(".vc_grid-loading:visible").length && vcGrid && ($grid.empty(), vcGrid.init())
            })
        }, vc_iframe.buildTTA = function() {
            $("[data-vc-accordion]:not(.vc_is-ready-fe)").on("show.vc.accordion", function(e) {
                var ui = {};
                ui.newPanel = $(this).data("vc.accordion").getTarget(), window.wpb_prepare_tab_content(e, ui)
            }).addClass("vc_is-ready-fe")
        }, vc_iframe.vc_pieChart = function() {
            window.vc_pieChart(), window.setTimeout(function() {
                $(window).unbind("resize.vcPieChartEditable").bind("resize.vcPieChartEditable",
                    function() {
                        $(".vc_pie_chart.vc_ready").vcChat("resize")
                    })
            }, 500)
        }, vc_iframe.recent_works = function(model_id) {
            var $el = $("[data-model-id=" + model_id + "]");
            var $container = $(".portfolio-wrapper");
            $container.isotope(), $(".portfolio-tabs a").click(function() {
                $(".portfolio-tabs li").removeClass("active"), $(this).parent("li").addClass("active");
                var selector = $(this).attr("data-filter");
                return $container.isotope({
                    filter: selector
                }), !1
            }), $(window).resize(function() {
                $container.isotope("reLayout")
            })
        }, vc_iframe.gmap_advanced =
        function(model_id) {
            var $el = $("[data-model-id=" + model_id + "]");
            $(".googlemaps").each(function() {
                var geocoder, map, styleMapRender;
                var id = $(this).attr("data-id");
                var address = $(this).attr("address");
                var address = $(this).attr("address");
                var map_design = $(this).attr("data-map");
                var zoomEl = $(this).attr("data-zoom");
                var titleEl = $(this).attr("data-title");
                var popupEl = $(this).attr("data-popup") === "true";
                var scrollwheelEl = $(this).attr("data-scrollwheel") === "true";
                var panEl = $(this).attr("data-pan") === "true";
                var zoom_controlEl =
                    $(this).attr("data-zoom_control") === "true";
                var type_controlEl = $(this).attr("data-type_control") === "true";
                var streetviewEl = $(this).attr("data-streetview") === "true";
                mapEl = "terrain";
                var styleMap = $(this).attr("map-style");
                if (styleMap != "default" && styleMap != "custom") switch (styleMap) {
                    case "1":
                        styleMapRender = [{
                            featureType: "landscape",
                            stylers: [{
                                hue: "#FFBB00"
                            }, {
                                saturation: 43.400000000000006
                            }, {
                                lightness: 37.599999999999994
                            }, {
                                gamma: 1
                            }]
                        }, {
                            featureType: "road.highway",
                            stylers: [{
                                hue: "#FFC200"
                            }, {
                                saturation: -61.8
                            }, {
                                lightness: 45.599999999999994
                            }, {
                                gamma: 1
                            }]
                        }, {
                            featureType: "road.arterial",
                            stylers: [{
                                hue: "#FF0300"
                            }, {
                                saturation: -100
                            }, {
                                lightness: 51.19999999999999
                            }, {
                                gamma: 1
                            }]
                        }, {
                            featureType: "road.local",
                            stylers: [{
                                hue: "#FF0300"
                            }, {
                                saturation: -100
                            }, {
                                lightness: 52
                            }, {
                                gamma: 1
                            }]
                        }, {
                            featureType: "water",
                            stylers: [{
                                hue: "#0078FF"
                            }, {
                                saturation: -13.200000000000003
                            }, {
                                lightness: 2.4000000000000057
                            }, {
                                gamma: 1
                            }]
                        }, {
                            featureType: "poi",
                            stylers: [{
                                hue: "#00FF6A"
                            }, {
                                saturation: -1.0989010989011234
                            }, {
                                lightness: 11.200000000000017
                            }, {
                                gamma: 1
                            }]
                        }];
                        break;
                    case "2":
                        styleMapRender = [{
                            featureType: "administrative",
                            elementType: "all",
                            stylers: [{
                                visibility: "on"
                            }, {
                                lightness: 33
                            }]
                        }, {
                            featureType: "landscape",
                            elementType: "all",
                            stylers: [{
                                color: "#f2e5d4"
                            }]
                        }, {
                            featureType: "poi.park",
                            elementType: "geometry",
                            stylers: [{
                                color: "#c5dac6"
                            }]
                        }, {
                            featureType: "poi.park",
                            elementType: "labels",
                            stylers: [{
                                visibility: "on"
                            }, {
                                lightness: 20
                            }]
                        }, {
                            featureType: "road",
                            elementType: "all",
                            stylers: [{
                                lightness: 20
                            }]
                        }, {
                            featureType: "road.highway",
                            elementType: "geometry",
                            stylers: [{
                                color: "#c5c6c6"
                            }]
                        }, {
                            featureType: "road.arterial",
                            elementType: "geometry",
                            stylers: [{
                                color: "#e4d7c6"
                            }]
                        }, {
                            featureType: "road.local",
                            elementType: "geometry",
                            stylers: [{
                                color: "#fbfaf7"
                            }]
                        }, {
                            featureType: "water",
                            elementType: "all",
                            stylers: [{
                                visibility: "on"
                            }, {
                                color: "#acbcc9"
                            }]
                        }];
                        break;
                    case "3":
                        styleMapRender = [{
                            featureType: "landscape.man_made",
                            elementType: "geometry",
                            stylers: [{
                                color: "#f7f1df"
                            }]
                        }, {
                            featureType: "landscape.natural",
                            elementType: "geometry",
                            stylers: [{
                                color: "#d0e3b4"
                            }]
                        }, {
                            featureType: "landscape.natural.terrain",
                            elementType: "geometry",
                            stylers: [{
                                visibility: "off"
                            }]
                        }, {
                            featureType: "poi",
                            elementType: "labels",
                            stylers: [{
                                visibility: "off"
                            }]
                        }, {
                            featureType: "poi.business",
                            elementType: "all",
                            stylers: [{
                                visibility: "off"
                            }]
                        }, {
                            featureType: "poi.medical",
                            elementType: "geometry",
                            stylers: [{
                                color: "#fbd3da"
                            }]
                        }, {
                            featureType: "poi.park",
                            elementType: "geometry",
                            stylers: [{
                                color: "#bde6ab"
                            }]
                        }, {
                            featureType: "road",
                            elementType: "geometry.stroke",
                            stylers: [{
                                visibility: "off"
                            }]
                        }, {
                            featureType: "road",
                            elementType: "labels",
                            stylers: [{
                                visibility: "off"
                            }]
                        }, {
                            featureType: "road.highway",
                            elementType: "geometry.fill",
                            stylers: [{
                                color: "#ffe15f"
                            }]
                        }, {
                            featureType: "road.highway",
                            elementType: "geometry.stroke",
                            stylers: [{
                                color: "#efd151"
                            }]
                        }, {
                            featureType: "road.arterial",
                            elementType: "geometry.fill",
                            stylers: [{
                                color: "#ffffff"
                            }]
                        }, {
                            featureType: "road.local",
                            elementType: "geometry.fill",
                            stylers: [{
                                color: "black"
                            }]
                        }, {
                            featureType: "transit.station.airport",
                            elementType: "geometry.fill",
                            stylers: [{
                                color: "#cfb2db"
                            }]
                        }, {
                            featureType: "water",
                            elementType: "geometry",
                            stylers: [{
                                color: "#a2daf2"
                            }]
                        }];
                        break;
                    case "4":
                        styleMapRender = [{
                            featureType: "landscape.natural",
                            elementType: "geometry.fill",
                            stylers: [{
                                visibility: "on"
                            }, {
                                color: "#e0efef"
                            }]
                        }, {
                            featureType: "poi",
                            elementType: "geometry.fill",
                            stylers: [{
                                visibility: "on"
                            }, {
                                hue: "#1900ff"
                            }, {
                                color: "#c0e8e8"
                            }]
                        }, {
                            featureType: "road",
                            elementType: "geometry",
                            stylers: [{
                                lightness: 100
                            }, {
                                visibility: "simplified"
                            }]
                        }, {
                            featureType: "road",
                            elementType: "labels",
                            stylers: [{
                                visibility: "off"
                            }]
                        }, {
                            featureType: "transit.line",
                            elementType: "geometry",
                            stylers: [{
                                visibility: "on"
                            }, {
                                lightness: 700
                            }]
                        }, {
                            featureType: "water",
                            elementType: "all",
                            stylers: [{
                                color: "#7dcdcd"
                            }]
                        }];
                        break;
                    case "5":
                        styleMapRender = [{
                            featureType: "administrative",
                            elementType: "all",
                            stylers: [{
                                visibility: "off"
                            }]
                        }, {
                            featureType: "landscape",
                            elementType: "all",
                            stylers: [{
                                visibility: "simplified"
                            }, {
                                hue: "#0066ff"
                            }, {
                                saturation: 74
                            }, {
                                lightness: 100
                            }]
                        }, {
                            featureType: "poi",
                            elementType: "all",
                            stylers: [{
                                visibility: "simplified"
                            }]
                        }, {
                            featureType: "road",
                            elementType: "all",
                            stylers: [{
                                visibility: "simplified"
                            }]
                        }, {
                            featureType: "road.highway",
                            elementType: "all",
                            stylers: [{
                                visibility: "off"
                            }, {
                                weight: .6
                            }, {
                                saturation: -85
                            }, {
                                lightness: 61
                            }]
                        }, {
                            featureType: "road.highway",
                            elementType: "geometry",
                            stylers: [{
                                visibility: "on"
                            }]
                        }, {
                            featureType: "road.arterial",
                            elementType: "all",
                            stylers: [{
                                visibility: "off"
                            }]
                        }, {
                            featureType: "road.local",
                            elementType: "all",
                            stylers: [{
                                visibility: "on"
                            }]
                        }, {
                            featureType: "transit",
                            elementType: "all",
                            stylers: [{
                                visibility: "simplified"
                            }]
                        }, {
                            featureType: "water",
                            elementType: "all",
                            stylers: [{
                                visibility: "simplified"
                            }, {
                                color: "#5f94ff"
                            }, {
                                lightness: 26
                            }, {
                                gamma: 5.86
                            }]
                        }];
                        break;
                    case "6":
                        styleMapRender = [{
                            featureType: "administrative.locality",
                            elementType: "all",
                            stylers: [{
                                hue: "#2c2e33"
                            }, {
                                saturation: 7
                            }, {
                                lightness: 19
                            }, {
                                visibility: "on"
                            }]
                        }, {
                            featureType: "landscape",
                            elementType: "all",
                            stylers: [{
                                hue: "#ffffff"
                            }, {
                                saturation: -100
                            }, {
                                lightness: 100
                            }, {
                                visibility: "simplified"
                            }]
                        }, {
                            featureType: "poi",
                            elementType: "all",
                            stylers: [{
                                hue: "#ffffff"
                            }, {
                                saturation: -100
                            }, {
                                lightness: 100
                            }, {
                                visibility: "off"
                            }]
                        }, {
                            featureType: "road",
                            elementType: "geometry",
                            stylers: [{
                                hue: "#bbc0c4"
                            }, {
                                saturation: -93
                            }, {
                                lightness: 31
                            }, {
                                visibility: "simplified"
                            }]
                        }, {
                            featureType: "road",
                            elementType: "labels",
                            stylers: [{
                                hue: "#bbc0c4"
                            }, {
                                saturation: -93
                            }, {
                                lightness: 31
                            }, {
                                visibility: "on"
                            }]
                        }, {
                            featureType: "road.arterial",
                            elementType: "labels",
                            stylers: [{
                                hue: "#bbc0c4"
                            }, {
                                saturation: -93
                            }, {
                                lightness: -2
                            }, {
                                visibility: "simplified"
                            }]
                        }, {
                            featureType: "road.local",
                            elementType: "geometry",
                            stylers: [{
                                hue: "#e9ebed"
                            }, {
                                saturation: -90
                            }, {
                                lightness: -8
                            }, {
                                visibility: "simplified"
                            }]
                        }, {
                            featureType: "transit",
                            elementType: "all",
                            stylers: [{
                                hue: "#e9ebed"
                            }, {
                                saturation: 10
                            }, {
                                lightness: 69
                            }, {
                                visibility: "on"
                            }]
                        }, {
                            featureType: "water",
                            elementType: "all",
                            stylers: [{
                                hue: "#e9ebed"
                            }, {
                                saturation: -78
                            }, {
                                lightness: 67
                            }, {
                                visibility: "simplified"
                            }]
                        }];
                        break;
                    case "7":
                        styleMapRender = [{
                            featureType: "water",
                            elementType: "geometry",
                            stylers: [{
                                color: "#193341"
                            }]
                        }, {
                            featureType: "landscape",
                            elementType: "geometry",
                            stylers: [{
                                color: "#2c5a71"
                            }]
                        }, {
                            featureType: "road",
                            elementType: "geometry",
                            stylers: [{
                                color: "#29768a"
                            }, {
                                lightness: -37
                            }]
                        }, {
                            featureType: "poi",
                            elementType: "geometry",
                            stylers: [{
                                color: "#406d80"
                            }]
                        }, {
                            featureType: "transit",
                            elementType: "geometry",
                            stylers: [{
                                color: "#406d80"
                            }]
                        }, {
                            elementType: "labels.text.stroke",
                            stylers: [{
                                visibility: "on"
                            }, {
                                color: "#3e606f"
                            }, {
                                weight: 2
                            }, {
                                gamma: .84
                            }]
                        }, {
                            elementType: "labels.text.fill",
                            stylers: [{
                                color: "#ffffff"
                            }]
                        }, {
                            featureType: "administrative",
                            elementType: "geometry",
                            stylers: [{
                                weight: .6
                            }, {
                                color: "#1a3541"
                            }]
                        }, {
                            elementType: "labels.icon",
                            stylers: [{
                                visibility: "off"
                            }]
                        }, {
                            featureType: "poi.park",
                            elementType: "geometry",
                            stylers: [{
                                color: "#2c5a71"
                            }]
                        }];
                        break;
                    case "8":
                        styleMapRender = [{
                            featureType: "water",
                            stylers: [{
                                saturation: 43
                            }, {
                                lightness: -11
                            }, {
                                hue: "#0088ff"
                            }]
                        }, {
                            featureType: "road",
                            elementType: "geometry.fill",
                            stylers: [{
                                hue: "#ff0000"
                            }, {
                                saturation: -100
                            }, {
                                lightness: 99
                            }]
                        }, {
                            featureType: "road",
                            elementType: "geometry.stroke",
                            stylers: [{
                                color: "#808080"
                            }, {
                                lightness: 54
                            }]
                        }, {
                            featureType: "landscape.man_made",
                            elementType: "geometry.fill",
                            stylers: [{
                                color: "#ece2d9"
                            }]
                        }, {
                            featureType: "poi.park",
                            elementType: "geometry.fill",
                            stylers: [{
                                color: "#ccdca1"
                            }]
                        }, {
                            featureType: "road",
                            elementType: "labels.text.fill",
                            stylers: [{
                                color: "#767676"
                            }]
                        }, {
                            featureType: "road",
                            elementType: "labels.text.stroke",
                            stylers: [{
                                color: "#ffffff"
                            }]
                        }, {
                            featureType: "poi",
                            stylers: [{
                                visibility: "off"
                            }]
                        }, {
                            featureType: "landscape.natural",
                            elementType: "geometry.fill",
                            stylers: [{
                                visibility: "on"
                            }, {
                                color: "#b8cb93"
                            }]
                        }, {
                            featureType: "poi.park",
                            stylers: [{
                                visibility: "on"
                            }]
                        }, {
                            featureType: "poi.sports_complex",
                            stylers: [{
                                visibility: "on"
                            }]
                        }, {
                            featureType: "poi.medical",
                            stylers: [{
                                visibility: "on"
                            }]
                        }, {
                            featureType: "poi.business",
                            stylers: [{
                                visibility: "simplified"
                            }]
                        }];
                        break
                }
                styleMap == "custom" && (styleMapRender = $(".custom_map_style").html(), styleMapRender = jQuery.parseJSON(styleMapRender));
                var popSize = $(this).attr("pop-size");
                popSize && (popSize = 'style="width:' + popSize + ';"'), messageEl && (messageEl = "<p>" + messageEl +
                    "</p>"), titleEl && (titleEl = "<h3>" + titleEl + "</h3>");
                var messageEl = $(this).attr("data-message");
                messageEl && (messageEl = "<p>" + messageEl + "</p>");
                var phoneEl = $(this).attr("data-phone");
                phoneEl && (phoneEl = '<p class="nobottommargin"><icon class="fa fa-phone"></icon>&nbsp;&nbsp;' + phoneEl + "</p>");
                var emailEl = $(this).attr("data-email");
                emailEl && (emailEl = '<p><icon class="fa fa-envelope"></icon>&nbsp;&nbsp;' + emailEl + "</p>");
                var mapOptions = {
                    zoom: parseInt(zoomEl),
                    mapTypeId: google.maps.MapTypeId[map_design],
                    scrollwheel: scrollwheelEl,
                    panControl: panEl,
                    zoomControl: zoom_controlEl,
                    mapTypeControl: type_controlEl,
                    overviewMapControl: !1,
                    streetViewControl: streetviewEl,
                    styles: styleMapRender
                };
                geocoder = new google.maps.Geocoder;
                var contentString = "<div " + popSize + ">" + titleEl + messageEl + '<p class="nobottommargin"><icon class="fa fa-home"></icon>&nbsp;&nbsp;' + address + "</p>" + phoneEl + emailEl + "</div>";
                var infowindow = new google.maps.InfoWindow({
                    content: contentString,
                    maxWidth: 450
                });
                geocoder.geocode({
                    address: address
                }, function(results, status) {
                    if (status ==
                        google.maps.GeocoderStatus.OK) {
                        map.setCenter(results[0].geometry.location);
                        var marker = new google.maps.Marker({
                            map: map,
                            position: results[0].geometry.location
                        });
                        google.maps.event.addListener(marker, "click", function() {
                            infowindow.open(map, marker)
                        }), popupEl && google.maps.event.addListenerOnce(map, "idle", function() {
                            setTimeout(function() {
                                google.maps.event.trigger(marker, "click")
                            }, 400)
                        })
                    } else alert("Geocode was not successful for the following reason: " + status)
                }), map = new google.maps.Map(document.getElementById(id),
                    mapOptions)
            })
        }, vc_iframe.vc_clients = function(model_id) {
            var $el = $("[data-model-id=" + model_id + "]");
            carousel_items()
        }, vc_iframe.vc_testimonials = function(model_id) {
            var $el = $("[data-model-id=" + model_id + "]");
            carousel_items()
        }, vc_iframe.vc_carousel2 = function(model_id) {
            var $el = $("[data-model-id=" + model_id + "]");
            carousel_items()
        }, vc_iframe.vc_counter = function(model_id) {
            var $el = $("[data-model-id=" + model_id + "]");
            var $counterElement = jQuery(".counter");
            $counterElement.length > 0 && $counterElement.each(function() {
                var element =
                    $(this);
                $counterElement.find("span").countTo()
            })
        }, vc_iframe.countdown_el = function(model_id) {
            var $el = $("[data-model-id=" + model_id + "]");
            cr_countdown()
        }, vc_iframe.recent_posts = function(model_id) {
            var $el = $("[data-model-id=" + model_id + "]");
            cr_flexslider_masonry()
        }, vc_iframe.flip_box = function(model_id) {
            var $el = $("[data-model-id=" + model_id + "]");
            flip_box()
        }, $(document).ready(function() {
            parent && parent.vc && !parent.vc.loaded && window.setTimeout(function() {
                parent.vc.build()
            }, 10)
        })
}(window.jQuery);
var vcPointerMessage;
! function($) {
    vcPointerMessage = function(target, pointerOptions, texts) {
        this.target = target, this.$pointer = null, this.texts = texts, this.pointerOptions = pointerOptions, this.init()
    }, vcPointerMessage.prototype = {
        init: function() {
            _.bindAll(this, "openedEvent", "reposition")
        },
        show: function() {
            this.$pointer = $(this.target), this.$pointer.data("vcPointerMessage", this), this.pointerOptions.opened = this.openedEvent, this.$pointer.addClass("vc-with-vc-pointer").pointer(this.pointerOptions).pointer("open"), $(window).on("resize.vcPointer",
                this.reposition)
        },
        domButtonsWrapper: function() {
            return $('<div class="vc_wp-pointer-controls" />')
        },
        domCloseBtn: function() {
            return $('<a class="vc_pointer-close close">' + this.texts.finish + "</a>")
        },
        domNextBtn: function() {
            return $('<button class="button button-primary button-large vc_wp-pointers-next">' + this.texts.next + '<i class="vc_pointer-icon"></i></button>')
        },
        domPrevBtn: function() {
            return $('<button class="button button-primary button-large vc_wp-pointers-prev"><i class="vc_pointer-icon"></i>' + this.texts.prev +
                "</button> ")
        },
        openedEvent: function(a, b) {
            var offset = b.pointer.offset();
            offset && offset.top && $("body").scrollTop(80 < offset.top ? offset.top - 80 : 0)
        },
        reposition: function() {
            this.$pointer.pointer("reposition")
        },
        close: function() {
            this.$pointer && this.$pointer.removeClass("vc-with-vc-pointer").pointer("close"), $(window).off("resize.vcPointer")
        }
    }
}(window.jQuery);